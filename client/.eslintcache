[{"/Users/karthik/workspaces/nutrition-list/client/src/index.js":"1","/Users/karthik/workspaces/nutrition-list/client/src/App.js":"2","/Users/karthik/workspaces/nutrition-list/client/src/reportWebVitals.js":"3","/Users/karthik/workspaces/nutrition-list/client/src/Table/Table.jsx":"4","/Users/karthik/workspaces/nutrition-list/client/src/queries.js":"5","/Users/karthik/workspaces/nutrition-list/client/src/button/Button.jsx":"6","/Users/karthik/workspaces/nutrition-list/client/src/AddFood/AddFood.jsx":"7"},{"size":478,"mtime":1611638656416,"results":"8","hashOfConfig":"9"},{"size":1048,"mtime":1611690111735,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1611595990060,"results":"11","hashOfConfig":"9"},{"size":1769,"mtime":1611689744274,"results":"12","hashOfConfig":"9"},{"size":584,"mtime":1611688057144,"results":"13","hashOfConfig":"9"},{"size":288,"mtime":1611677864421,"results":"14","hashOfConfig":"9"},{"size":1527,"mtime":1611687871576,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"2k4uni",{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"18"},"/Users/karthik/workspaces/nutrition-list/client/src/index.js",[],["33","34"],"/Users/karthik/workspaces/nutrition-list/client/src/App.js",["35","36","37","38"],"/Users/karthik/workspaces/nutrition-list/client/src/reportWebVitals.js",[],"/Users/karthik/workspaces/nutrition-list/client/src/Table/Table.jsx",["39"],"import React, { useState } from 'react';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_NUTRITION_LIST } from '../queries';\n\nimport Button from '../button/Button';\nimport './Table.css';\n\nconst Table = () => {\n\tconst { loading, error, data } = useQuery(GET_NUTRITION_LIST);\n\n\tif (loading) return <p>Loading...</p>;\n\tif (error) return <p>Error...(</p>;\n\n\treturn (\n\t\t<div class='pa4'>\n\t\t\t<div>\n\t\t\t\t<br />\n\t\t\t\t<Button inline type=\"delete\">Delete</Button>\n\t\t\t</div>\n\t\t\t<div class='overflow-auto'>\n\t\t\t\t<table class='f6 w-100 mw8 center' cellspacing='5'>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'></th>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'>\n\t\t\t\t\t\t\t\tDessert(100g serving)\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'>Calories</th>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'>Fat (g)</th>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'>Carbs (g)</th>\n\t\t\t\t\t\t\t<th class='fw6 bb b--black-20 tl pb3 pr3 bg-white'>\n\t\t\t\t\t\t\t\tProtein (g)\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody class='lh-copy'>\n\t\t\t\t\t\t{data.foodList.map(\n\t\t\t\t\t\t\t({\n\t\t\t\t\t\t\t\tdessert,\n\t\t\t\t\t\t\t\tnutritionInfo: { calories, carb, fat, protein },\n\t\t\t\t\t\t\t}) => (\n\t\t\t\t\t\t\t\t<tr key={dessert}>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20 bg-grey'>\n\t\t\t\t\t\t\t\t\t\t<input type='checkbox' />\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20'>{dessert}</td>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20'>{calories}</td>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20'>{carb}</td>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20'>{fat}</td>\n\t\t\t\t\t\t\t\t\t<td class='pv3 pr3 bb b--black-20'>{protein}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Table;\n","/Users/karthik/workspaces/nutrition-list/client/src/queries.js",[],"/Users/karthik/workspaces/nutrition-list/client/src/button/Button.jsx",[],"/Users/karthik/workspaces/nutrition-list/client/src/AddFood/AddFood.jsx",["40"],"import React, { useState } from 'react';\n\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_FOOD } from '../queries';\n\nimport Button from '../button/Button';\n\nconst AddFood = () => {\n\tconst [dessert, setDessert] = useState('');\n\tconst [protein, setProtein] = useState();\n\tconst [fat, setFat] = useState();\n\tconst [carb, setCarb] = useState();\n\tconst [calories, setCalories] = useState();\n\n\tconst [addFood, { data }] = useMutation(ADD_FOOD);\n\n\treturn (\n\t\t<div>\n\t\t\t<form\n\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\taddFood({\n\t\t\t\t\t\tvariables: { dessert , protein , fat, carb, calories },\n\t\t\t\t\t});\n\t\t\t\t}}>\n\t\t\t\t<label>\n\t\t\t\t\tDessert :\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tonChange={(e) => setDessert(e.target.value)}\n\t\t\t\t\t\tvalue={dessert}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\tProtein :{' '}\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tonChange={(e) => setProtein(e.target.value)}\n\t\t\t\t\t\tvalue={protein}\n\t\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\tFat : \n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='text' \n\t\t\t\t\t\tonChange={(e) => setFat(e.target.value)}\n\t\t\t\t\t\tvalue={fat}\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\tCarb :\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tonChange={(e) => setCarb(e.target.value)}\n\t\t\t\t\t\tvalue={carb}\t\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<label>\n\t\t\t\t\tCalories:{' '}\n\t\t\t\t\t<input \n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tonChange={(e) => setCalories(e.target.value)}\n\t\t\t\t\t\tvalue={calories}\t\n\t\t\t\t\t/>\n\t\t\t\t</label>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<Button>Add Food</Button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default AddFood;\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":2,"column":27,"nodeType":"47","messageId":"48","endLine":2,"endColumn":33},{"ruleId":"45","severity":1,"message":"49","line":2,"column":35,"nodeType":"47","messageId":"48","endLine":2,"endColumn":41},{"ruleId":"45","severity":1,"message":"50","line":2,"column":43,"nodeType":"47","messageId":"48","endLine":2,"endColumn":48},{"ruleId":"45","severity":1,"message":"51","line":2,"column":50,"nodeType":"47","messageId":"48","endLine":2,"endColumn":54},{"ruleId":"45","severity":1,"message":"52","line":1,"column":17,"nodeType":"47","messageId":"48","endLine":1,"endColumn":25},{"ruleId":"45","severity":1,"message":"53","line":15,"column":20,"nodeType":"47","messageId":"48","endLine":15,"endColumn":24},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]